imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi: ~
    #translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.root_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.root_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true
    cache:
        app: cache.adapter.redis
        default_redis_provider: "redis://%redis_host%"

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        default_connection: default
        connections:
            default:
                #                schema_filter: ~^rlt_mytable~
                driver:   pdo_pgsql
                server_version: 9.6
                host:     "%database_host%"
                port:     "%database_port%"
                dbname:   "%database_name%"
                user:     "%database_user%"
                password: "%database_password%"
                charset: utf8
                default_table_options:
                    charset: utf8
                    collate: utf8
                mapping_types:
                    _int2:          integer
                    _int4:          integer
                    bit:            boolean
                    iratio_type:    string
                    jsonb:          json_array
                    manager_type:   string
                    percent_type:   string
                    rate_type:      string
                    reg_status:     string
                    role_type:      string
                    user_type:      string
                    client:         string
                    type:           string
                    _text:          text_array
                    _int:           int_array
                    _json:          json_array
                    _bpchar:        string
        types:
            text_array:
                class: Doctrine\DBAL\PostgresTypes\TextArrayType
            int_array:
                class: Doctrine\DBAL\PostgresTypes\IntArrayType
            json_array:
                class: Doctrine\DBAL\Types\JsonArrayType

    orm:
        default_entity_manager: default
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:
            default:
                connection: default
                naming_strategy: doctrine.orm.naming_strategy.underscore
                mappings:
                    RltBundle: ~
                dql:
                    string_functions:
                        cast: Oro\ORM\Query\AST\Functions\Cast
                        any_field: Opsway\Doctrine\ORM\Query\AST\Functions\Any
                        arr_contains: Opsway\Doctrine\ORM\Query\AST\Functions\ArrayContains
                        array: Opsway\Doctrine\ORM\Query\AST\Functions\Arr
                        contained: Opsway\Doctrine\ORM\Query\AST\Functions\Contained
                        get_json_field_by_key: Opsway\Doctrine\ORM\Query\AST\Functions\GetJsonFieldByKey
                        get_json_object: Opsway\Doctrine\ORM\Query\AST\Functions\GetJsonObject
                        get_json_object_text: Opsway\Doctrine\ORM\Query\AST\Functions\GetJsonObjectText

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

doctrine_migrations:
    dir_name: "%kernel.root_dir%/DoctrineMigrations"
    namespace: Application\Migrations
    table_name: rlt_migration_versions
    name: Application Migrations
    organize_migrations: by_year

# Nelmio CORS
nelmio_cors:
    defaults:
        allow_credentials: true
        allow_origin:  ["%cors_allow_origin%"]
        allow_methods: ["POST", "PUT", "PATCH", "GET", "DELETE", "OPTIONS"]
        allow_headers: ["content-type", "authorization"]
        expose_headers: ["X-Data-Count"]
        max_age:       3600
    paths:
        '^/': ~

# Nelmio API Doc
nelmio_api_doc:
    name: RLT API
      #motd:
    # template: RltBundle::motd.html.twig
    cache:
        enabled: false
    sandbox:
        accept_type:        "application/json"
        authentication:
            delivery: http
            type:     bearer
        body_format:
            formats:        [ "json" ]
            default_format: "json"
        request_format:
            formats:
                json:       "application/json"

# FOS REST Bundle
fos_rest:
    routing_loader:
        default_format:  json
        include_format:  false
    body_converter:
        enabled: true
        validate: true
    serializer:
        serialize_null: true
    view:
        view_response_listener: 'force'
        formats:
            json: true
            csv: true
            jsonp: false
            xml: false
            rss: false
        mime_types:
            json: ['application/json', 'application/x-json']
            jpg: ['image/jpeg']
            png: ['image/png']
    exception:
        enabled: true
        codes:
            'Doctrine\ORM\ORMInvalidArgumentException': 400
    body_listener:
        array_normalizer: fos_rest.normalizer.camel_keys
        default_format: json
    param_fetcher_listener: true
    format_listener:
        enabled: true
        rules:
        #- { path: ^/api/customdoc/search, priorities: [ html ], fallback_format: ~, prefer_extension: true }
        - { path: ^/api, priorities: [ json, jsonp, csv ], fallback_format: ~, prefer_extension: true }
        - { path: ^/doc, priorities: [ html ], fallback_format: ~, prefer_extension: true }

# JMS Serializer
jms_serializer:
    metadata:
        directories:
            FOSUB:
                namespace_prefix: FOS\UserBundle
                path: "@RltBundle/Resources/config/serializer/FOSUB"

# FOSUser
fos_user:
    db_driver: orm
    firewall_name: main
    user_class: RltBundle\Entity\User
    from_email:
        address: "%mailer_user%"
        sender_name: "%mailer_user%"
    group:
        group_class: RltBundle\Entity\Group

# Lexik JWT Auth
lexik_jwt_authentication:
    secret_key: "%jwt_private_key_path%"
    public_key:  "%jwt_public_key_path%"
    pass_phrase:      "%jwt_key_pass_phrase%"
    token_ttl:        "%jwt_token_ttl%"

sensio_framework_extra:
    request: { converters: true }
    router:
        annotations: false

monolog:
    handlers:
        elasticsearch:
            type: elasticsearch
            elasticsearch:
                host: "%elasticsearch_host%"
                port: "%elasticsearch_port%"
            index: rlt
            channels: ['app']
